# ======================================================
# 🌐 GutBot: AI-Powered Public Health Chatbot
# Production-Grade Render Blueprint
# ======================================================

services:
  # --------------------------
  # Backend (FastAPI + GutBot)
  # --------------------------
  - type: web
    name: GUTBOT               # ✅ your app name will be https://gutbot.onrender.com
    env: python
    plan: free                 # ⚡ upgrade to starter/pro for higher performance
    region: oregon             # 🌍 change to "singapore" if Asia audience

    rootDir: ./public_health_chatbot   # ✅ enter the folder where Backend + Frontend + requirements.txt live

    buildCommand: |
      pip install --upgrade pip
      pip install -r requirements.txt
      # Ensure SpaCy model exists (required by healthbot.py)
      python -m spacy download en_core_web_sm

    startCommand: uvicorn Backend.app:app --host 0.0.0.0 --port $PORT

    # 🔑 Environment variables (safe, editable in Render dashboard)
    envVars:
      
      - key: REDIS_URL
        value: "redis://red-d3e1onvdiees73fpq430:6379"

      - key: ENVIRONMENT
        value: production
      - key: LOG_LEVEL
        value: info
      - key: RATE_LIMIT_PER_MINUTE
        value: "60"        # 🚦 adjust depending on load
      - key: ALLOWED_HOSTS
        value: "gutbot.onrender.com,localhost,127.0.0.1"
      - key: CORS_ORIGINS
        value: "*"         # 🔒 tighten in production: e.g. https://gutbot.onrender.com
      - key: SENTRY_DSN
        sync: false        # 🎯 connect later for error monitoring
      - key: REDIS_URL
        fromService: gutbot-redis:url

    # ⚡ Health check → ensures bot is live
    healthCheckPath: /health
    healthCheckIntervalSeconds: 30
    healthCheckTimeoutSeconds: 10
    healthCheckSuccessThreshold: 2
    healthCheckFailureThreshold: 3

    # 📈 Scaling rules
    scaling:
      minInstances: 1
      maxInstances: 2       # auto-scale under load
      targetCPUPercent: 75  # keep CPU <75% per instance

    # --------------------------
    # Frontend hosting (chat UI)
    # --------------------------
    staticPublishPath: ./Frontend
    autoDeploy: true        # 🚀 redeploy automatically on every git push

    # 🗂 Logging (persistent)
    disk:
      name: gutbot-logs
      mountPath: /var/log/gutbot
      sizeGB: 1

# --------------------------
# Database (Redis for Rate limiting / Sessions)
# --------------------------
databases:
  - name: gutbot-redis
    plan: free
    region: oregon
    ipAllowList: []         # 🔒 keep empty (public access disabled by default)
